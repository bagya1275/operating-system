#include <stdio.h>

int main() {
    int n, i;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    int burst_time[n], completion_time[n], turnaround_time[n], waiting_time[n];
    float total_tat = 0, total_wt = 0;

    // Input burst times
    printf("Enter the burst times for each process:\n");
    for (i = 0; i < n; i++) {
        printf("Burst time for process P%d: ", i + 1);
        scanf("%d", &burst_time[i]);
    }

    // Calculate Completion Time
    completion_time[0] = burst_time[0]; // First process completes at its burst time
    for (i = 1; i < n; i++) {
        completion_time[i] = completion_time[i - 1] + burst_time[i];
    }

    // Calculate Turnaround Time and Waiting Time
    for (i = 0; i < n; i++) {
        turnaround_time[i] = completion_time[i]; // TAT = CT since AT = 0
        waiting_time[i] = turnaround_time[i] - burst_time[i]; // WT = TAT - BT

        total_tat += turnaround_time[i];
        total_wt += waiting_time[i];
    }

    // Output the results
    printf("\nProcess\tBurst Time\tCompletion Time\tTurnaround Time\tWaiting Time\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t%d\t\t%d\t\t%d\t\t%d\n", i + 1, burst_time[i], completion_time[i], turnaround_time[i], waiting_time[i]);
    }

    // Display averages
    printf("\nAverage Turnaround Time: %.2f\n", total_tat / n);
    printf("Average Waiting Time: %.2f\n", total_wt / n);

    return 0;
}
